;; Analyzed by ClojureScript 0.0-3211
{:use-macros nil, :excludes #{}, :name cljs.core.async.impl.ioc-helpers, :imports nil, :requires {cljs.core.async.impl.protocols cljs.core.async.impl.protocols, impl cljs.core.async.impl.protocols}, :uses nil, :defs {EXCEPTION-FRAMES {:meta {:const true, :end-column 30, :end-line 9, :column 14, :line 9, :file "/Users/pthomas/projects/personal/sandbox/clojure/animation-playground/out/cljs/core/async/impl/ioc_helpers.cljs"}, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :line 9, :column 1, :end-line 9, :end-column 30, :const true, :test true, :name cljs.core.async.impl.ioc-helpers/EXCEPTION-FRAMES}, ->t23596 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([f fn-handler meta23597])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{cljs.core.async.impl.protocols/Handler cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{cljs.core.async.impl.protocols/Handler cljs.core/IMeta cljs.core/IWithMeta}, :name cljs.core.async.impl.ioc-helpers/->t23596, :variadic false, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :method-params ([f fn-handler meta23597]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 27, :max-fixed-arity 3, :fn-var true, :arglists (quote ([f fn-handler meta23597])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, t23596 {:num-fields 3, :protocols #{cljs.core.async.impl.protocols/Handler cljs.core/IMeta cljs.core/IWithMeta}, :name cljs.core.async.impl.ioc-helpers/t23596, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :type true, :anonymous true, :column 3, :line 27, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, process-exception {:protocol-inline nil, :meta {:arglists (quote ([state])), :end-column 24, :end-line 93, :column 7, :line 93, :file "/Users/pthomas/projects/personal/sandbox/clojure/animation-playground/out/cljs/core/async/impl/ioc_helpers.cljs"}, :name cljs.core.async.impl.ioc-helpers/process-exception, :variadic false, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :end-column 24, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state])), :test true}, t23593 {:num-fields 3, :protocols #{cljs.core.async.impl.protocols/Handler cljs.core/IMeta cljs.core/IWithMeta}, :name cljs.core.async.impl.ioc-helpers/t23593, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :type true, :anonymous true, :column 3, :line 27, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ExceptionFrame {:num-fields 5, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name cljs.core.async.impl.ioc-helpers/ExceptionFrame, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :end-column 26, :type true, :column 12, :internal-ctor true, :line 78, :record true, :end-line 78, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->t23593 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([f fn-handler meta23594])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{cljs.core.async.impl.protocols/Handler cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{cljs.core.async.impl.protocols/Handler cljs.core/IMeta cljs.core/IWithMeta}, :name cljs.core.async.impl.ioc-helpers/->t23593, :variadic false, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :method-params ([f fn-handler meta23594]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 27, :max-fixed-arity 3, :fn-var true, :arglists (quote ([f fn-handler meta23594])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, STATE-IDX {:meta {:const true, :end-column 23, :end-line 6, :column 14, :line 6, :file "/Users/pthomas/projects/personal/sandbox/clojure/animation-playground/out/cljs/core/async/impl/ioc_helpers.cljs"}, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :line 6, :column 1, :end-line 6, :end-column 23, :const true, :test true, :name cljs.core.async.impl.ioc-helpers/STATE-IDX}, map->ExceptionFrame {:protocol-inline nil, :meta {:arglists (quote ([G__23627])), :factory :map, :internal-ctor true, :end-column 26, :end-line 78, :column 12, :line 78, :file "/Users/pthomas/projects/personal/sandbox/clojure/animation-playground/out/cljs/core/async/impl/ioc_helpers.cljs"}, :name cljs.core.async.impl.ioc-helpers/map->ExceptionFrame, :variadic false, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :end-column 26, :method-params ([G__23627]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 78, :end-line 78, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__23627])), :test true}, aset-object {:protocol-inline nil, :meta {:arglists (quote ([arr idx o])), :end-column 18, :end-line 13, :column 7, :line 13, :file "/Users/pthomas/projects/personal/sandbox/clojure/animation-playground/out/cljs/core/async/impl/ioc_helpers.cljs"}, :name cljs.core.async.impl.ioc-helpers/aset-object, :variadic false, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :end-column 18, :method-params ([arr idx o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 3, :fn-var true, :arglists (quote ([arr idx o])), :test true}, add-exception-frame {:protocol-inline nil, :meta {:arglists (quote ([state catch-block catch-exception finally-block continue-block])), :end-column 26, :end-line 84, :column 7, :line 84, :file "/Users/pthomas/projects/personal/sandbox/clojure/animation-playground/out/cljs/core/async/impl/ioc_helpers.cljs"}, :name cljs.core.async.impl.ioc-helpers/add-exception-frame, :variadic false, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :end-column 26, :method-params ([state catch-block catch-exception finally-block continue-block]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 5, :fn-var true, :arglists (quote ([state catch-block catch-exception finally-block continue-block])), :test true}, run-state-machine-wrapped {:protocol-inline nil, :meta {:arglists (quote ([state])), :end-column 32, :end-line 36, :column 7, :line 36, :file "/Users/pthomas/projects/personal/sandbox/clojure/animation-playground/out/cljs/core/async/impl/ioc_helpers.cljs"}, :name cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped, :variadic false, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :end-column 32, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state])), :test true}, FN-IDX {:meta {:const true, :end-column 20, :end-line 5, :column 14, :line 5, :file "/Users/pthomas/projects/personal/sandbox/clojure/animation-playground/out/cljs/core/async/impl/ioc_helpers.cljs"}, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :line 5, :column 1, :end-line 5, :end-column 20, :const true, :test true, :name cljs.core.async.impl.ioc-helpers/FN-IDX}, aget-object {:protocol-inline nil, :meta {:arglists (quote ([arr idx])), :end-column 18, :end-line 16, :column 7, :line 16, :file "/Users/pthomas/projects/personal/sandbox/clojure/animation-playground/out/cljs/core/async/impl/ioc_helpers.cljs"}, :name cljs.core.async.impl.ioc-helpers/aget-object, :variadic false, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :end-column 18, :method-params ([arr idx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([arr idx])), :test true}, return-chan {:protocol-inline nil, :meta {:arglists (quote ([state value])), :end-column 18, :end-line 71, :column 7, :line 71, :file "/Users/pthomas/projects/personal/sandbox/clojure/animation-playground/out/cljs/core/async/impl/ioc_helpers.cljs"}, :name cljs.core.async.impl.ioc-helpers/return-chan, :variadic false, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :end-column 18, :method-params ([state value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state value])), :test true}, ->ExceptionFrame {:protocol-inline nil, :meta {:arglists (quote ([catch-block catch-exception finally-block continue-block prev])), :factory :positional, :internal-ctor true, :end-column 26, :end-line 78, :column 12, :line 78, :file "/Users/pthomas/projects/personal/sandbox/clojure/animation-playground/out/cljs/core/async/impl/ioc_helpers.cljs"}, :name cljs.core.async.impl.ioc-helpers/->ExceptionFrame, :variadic false, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :end-column 26, :method-params ([catch-block catch-exception finally-block continue-block prev]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 78, :end-line 78, :max-fixed-arity 5, :fn-var true, :arglists (quote ([catch-block catch-exception finally-block continue-block prev])), :test true}, BINDINGS-IDX {:meta {:const true, :end-column 26, :end-line 8, :column 14, :line 8, :file "/Users/pthomas/projects/personal/sandbox/clojure/animation-playground/out/cljs/core/async/impl/ioc_helpers.cljs"}, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :line 8, :column 1, :end-line 8, :end-column 26, :const true, :test true, :name cljs.core.async.impl.ioc-helpers/BINDINGS-IDX}, CURRENT-EXCEPTION {:meta {:const true, :end-column 31, :end-line 10, :column 14, :line 10, :file "/Users/pthomas/projects/personal/sandbox/clojure/animation-playground/out/cljs/core/async/impl/ioc_helpers.cljs"}, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :line 10, :column 1, :end-line 10, :end-column 31, :const true, :test true, :name cljs.core.async.impl.ioc-helpers/CURRENT-EXCEPTION}, fn-handler {:protocol-inline nil, :meta {:arglists (quote ([f])), :private true, :end-column 18, :end-line 25, :column 8, :line 25, :file "/Users/pthomas/projects/personal/sandbox/clojure/animation-playground/out/cljs/core/async/impl/ioc_helpers.cljs"}, :private true, :name cljs.core.async.impl.ioc-helpers/fn-handler, :variadic false, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :end-column 18, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f])), :test true}, run-state-machine {:protocol-inline nil, :meta {:arglists (quote ([state])), :end-column 24, :end-line 33, :column 7, :line 33, :file "/Users/pthomas/projects/personal/sandbox/clojure/animation-playground/out/cljs/core/async/impl/ioc_helpers.cljs"}, :name cljs.core.async.impl.ioc-helpers/run-state-machine, :variadic false, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :end-column 24, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state])), :test true}, ioc-alts! {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 3, :method-params [(state cont-block ports {:as opts})], :arglists [[state cont-block ports & {:as opts}]], :arglists-meta (nil)}, :arglists (quote ([state cont-block ports & {:as opts}])), :end-column 16, :end-line 60, :column 7, :line 60, :file "/Users/pthomas/projects/personal/sandbox/clojure/animation-playground/out/cljs/core/async/impl/ioc_helpers.cljs"}, :name cljs.core.async.impl.ioc-helpers/ioc-alts!, :variadic true, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(state cont-block ports {:as opts})], :arglists [[state cont-block ports & {:as opts}]], :arglists-meta (nil)}, :method-params [(state cont-block ports {:as opts})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 3, :fn-var true, :arglists [[state cont-block ports & {:as opts}]], :test true}, finished? {:protocol-inline nil, :meta {:arglists (quote ([state-array])), :doc "Returns true if the machine is in a finished state", :end-column 16, :end-line 20, :column 7, :line 20, :file "/Users/pthomas/projects/personal/sandbox/clojure/animation-playground/out/cljs/core/async/impl/ioc_helpers.cljs"}, :name cljs.core.async.impl.ioc-helpers/finished?, :variadic false, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :end-column 16, :method-params ([state-array]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state-array])), :doc "Returns true if the machine is in a finished state", :test true}, USER-START-IDX {:meta {:const true, :end-column 28, :end-line 11, :column 14, :line 11, :file "/Users/pthomas/projects/personal/sandbox/clojure/animation-playground/out/cljs/core/async/impl/ioc_helpers.cljs"}, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :line 11, :column 1, :end-line 11, :end-column 28, :const true, :test true, :name cljs.core.async.impl.ioc-helpers/USER-START-IDX}, put! {:protocol-inline nil, :meta {:arglists (quote ([state blk c val])), :end-column 11, :end-line 52, :column 7, :line 52, :file "/Users/pthomas/projects/personal/sandbox/clojure/animation-playground/out/cljs/core/async/impl/ioc_helpers.cljs"}, :name cljs.core.async.impl.ioc-helpers/put!, :variadic false, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :end-column 11, :method-params ([state blk c val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 4, :fn-var true, :arglists (quote ([state blk c val])), :test true}, take! {:protocol-inline nil, :meta {:arglists (quote ([state blk c])), :end-column 12, :end-line 43, :column 7, :line 43, :file "/Users/pthomas/projects/personal/sandbox/clojure/animation-playground/out/cljs/core/async/impl/ioc_helpers.cljs"}, :name cljs.core.async.impl.ioc-helpers/take!, :variadic false, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :end-column 12, :method-params ([state blk c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state blk c])), :test true}, VALUE-IDX {:meta {:const true, :end-column 23, :end-line 7, :column 14, :line 7, :file "/Users/pthomas/projects/personal/sandbox/clojure/animation-playground/out/cljs/core/async/impl/ioc_helpers.cljs"}, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :line 7, :column 1, :end-line 7, :end-column 23, :const true, :test true, :name cljs.core.async.impl.ioc-helpers/VALUE-IDX}}, :require-macros {cljs.core.async.impl.ioc-macros cljs.core.async.impl.ioc-macros, ioc cljs.core.async.impl.ioc-macros}, :cljs.analyzer/constants {:order [:finished :else :recur :catch-block :catch-exception :finally-block :continue-block :prev], :seen #{:else :finally-block :recur :catch-block :finished :catch-exception :prev :continue-block}}, :doc nil}